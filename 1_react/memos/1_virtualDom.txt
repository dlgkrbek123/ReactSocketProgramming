---------------------------------------------------------------------------------

프론트엔드 라이브러리는 여러개 나왔다 역사의 뒤안길로 사라져왔다.
리액트는 UI 라이브러리다.   => 프레임워크처럼 전체구조를 강제하지 않음
MVC, MVVM모델을 지향하기보다는 View에만 집중한 라이브러리

---------------------------------------------------------------------------------

DOM (Document Object Model)
=> 페이지의 구조와 내용을 표현하는 역할
=> 렌더링 과정에서 브라우져가 HTML을 이해할 수 잇는 구조로 변환하여 DOM Tree를 생성
=> 부모 자식관계로 노드들이 연결됨

=> HTML이 파싱되어 DOM트리가 생성되면 css파일을 파싱해서 CSSOM 트리를 생성
=> DOM트리와 CSSOM트리를 결합하여 렌더트리를 생성 (실제 화면에 표시되는 요소를 포함)
=> 렌더트리를 이용해서 화면에 표시될 영역을 계산하는 레이아웃(리플로우) 작업을 수행
=> 노드를 화면에 픽셀로 변환하는 리페인트 과정을 거쳐 변환된 내용이 화면에 노출

---------------------------------------------------------------------------------

유저의 인터랙션(hover, click)에 의해 DOM트리가 변한다
=> 리플로우, 리페인트의 과정을 거침

DOM트리의 구조 변경은 순식간에 적은자원을 사용하며 이뤄지나
트리가 복잡할수록 속도가 떨어진다.
DOM을 변경하면 리페인트, 리플로우 수행시 트리에서 변화된 노드를 찾는데 시간이 걸린다
이를 줄이고 싶다.

메모리상에 렌더트리의 모양을 기록해놓고 변경시 이 둘을 비교하여 달라진 부분만 리플로우/리페인트를 수행
!! 실제 변경되어야 하는 사항만 DOM에 반영하자 !!
=> 조화(reconcilation)

---------------------------------------------------------------------------------